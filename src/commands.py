from telethon import events
from src.keyboards import *


@bot.on(events.callbackquery.CallbackQuery())
async def new_button(event):
    try:
        id = event.original_update.user_id
    except Exception as e:
        id = ''
    command = event.original_update.data.decode('utf-8')

    logging.info(f'Command|{id}: {command}')

    if 'redirect' == command[:8]:  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è –≤ —á–∞—Ç –æ–ø—Ä–µ–¥—ë–ª—ë–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞ –≤ –≥–æ—Ä–æ–¥–µ
        if command.count('=') == 1:  # –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
            taskId = int(command.split('=')[-1])
            template = await make_main_redirect_buttons(taskId)
            await event.edit(buttons=template)
        elif command.count('=') == 2:  # –≤—ã–±–æ—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
            parentId, taskId = map(int, command.split('=')[1:])
            template = await make_sub_redirect_buttons(parentId, taskId)
            await event.edit(buttons=template)
        elif command.count('=') == 3:  # –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
            parentId, divId, taskId = map(int, command.split('=')[1:])
            chatId = sub_divisions[parentId][divId].tgId
            if chatId == '':
                chatId = main_divisions[parentId].tgId
            try:
                template = await make_accept_buttons(taskId)

                task_change_state(taskId, 1)
                task_change_type(taskId)

                watcher_add(taskId, users[id].jobId)

                for prevDivId in get_executors(taskId):
                    division_delete(taskId, prevDivId, users[id].jobId)
                division_add(taskId, divId, users[id].jobId)

                authorId, txt = task_make_txt(taskId)
                await bot.send_message(chatId, txt, buttons=template)
                old = await event.edit(f'üü¢–ó–∞–¥–∞—á–∞ {taskId} –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ {sub_divisions[parentId][divId].name}')
                trash_add(datetime.now(), old)
            except Exception as e:
                logging.error(str(e))
                await bot.send_message(id, 'üî¥–í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏')

    elif 'show' == command[:4]:  # –∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å –∏ —Å–∫—Ä—ã—Ç—å —É –∑–∞–¥–∞—á–∏
        taskId, val = map(int, command.split('=')[1:])
        if val == 1:  # –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏
            template = await make_main_redirect_buttons(taskId)
            await event.edit(buttons=template)
        elif val == 2:  # —Å–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏
            await event.edit(buttons=[Button.inline('‚¨áÔ∏è–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å', f'show={taskId}=1')])
        elif val == 3:  # —É–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            await event.delete()
            del current_tasks[taskId]

    elif 'div_redirect' == command[:12]:  # —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–µ–π —É –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è
        if command.count('=') == 4:
            parentId, divId, taskId, mode = map(int, command.split('=')[1:])
            if mode == 0:  # –∑–∞–∫—Ä—ã—Ç–∏–µ –∑–∞–¥–∞—á–∏
                users[id].change_current_task(taskId)
                current_tasks[taskId].add_action(id, 1, parentId, divId)
                old = await event.edit('üõë–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø–æ–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—éüõë')
                trash_add(datetime.now(), old)
            elif mode == 1:  # –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ –¥—Ä—É–≥–æ–π –æ—Ç–¥–µ–ª
                users[id].change_current_task(taskId)
                current_tasks[taskId].add_action(id, 2, parentId, divId)
                old = await event.edit('üõë–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø–æ–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—éüõë')
                trash_add(datetime.now(), old)

    elif 'cal_redirect' == command[:12]:  # —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–µ–∑–¥
        if command.count('=') == 1:  # –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
            taskId = int(command.split('=')[-1])
            template = await make_division_redirect_buttons(taskId)
            await event.edit(buttons=template)
        elif command.count('=') == 2:  # –≤—ã–±–æ—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è —Å –º–µ—Ç–∫–æ–π "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"
            parentId, taskId = map(int, command.split('=')[1:])
            template = await make_calendar_redirect_buttons(parentId, taskId)
            await event.edit(buttons=template)
        elif command.count('=') == 4:  # –≤—ã–±–æ—Ä –¥–Ω—è –∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç–¥–µ–ª–µ–Ω–∏—è
            parentId, divId, taskId, delta = map(int, command.split('=')[1:])
            template = await make_div_calendar_buttons(parentId, divId, taskId, delta)
            await event.edit(buttons=template)

    elif 'job' == command[:3]:  # –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —Ä–∞–±–æ—Ç—ã –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–∑–æ–≤ –¥–ª—è —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
        if command.count('=') == 5:  # –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —Ä–∞–±–æ—Ç
            parentId, divId, taskId, delta, time = map(int, command.split('=')[1:])
            template = await make_job_calendar_buttons(parentId, divId, taskId, delta, time)
            await event.edit(buttons=template)
        elif command.count('=') == 6:  # –≤—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ ID –∑–∞–¥–∞—á–∏
            parentId, divId, taskId, delta, time, idx = map(int, command.split('=')[1:])
            template = await make_div_job_calendar_buttons(parentId, divId, taskId, delta, time, idx)
            await event.edit(buttons=template)
        elif command.count('=') == 7:  # —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –≤—ã–µ–∑–¥
            parentId, divId, taskId, delta, time, idx, typer = map(int, command.split('=')[1:])
            date = datetime.fromisoformat(f'{(datetime.now() + timedelta(days=delta)).date()} {str(time).zfill(2)}:00')
            currentId = task_create_new(typer, taskId, divId, date, users[id].jobId)

            task_change_state(taskId, 2)
            del current_tasks[taskId]

            if currentId != -1:
                txt = f'üü¢–ó–∞–¥–∞–Ω–∏–µ #[{currentId}](http://{link_url}.trytek.ru/oper/'\
                      f'?core_section=task&action=show&id={currentId}) —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ'
                old = await event.edit(txt, buttons=[
                    [Button.url('–†–∞–±–æ—Ç–∞—Ç—å —Å –∑–∞–¥–∞—á–µ–π (USERSIDE)‚ÜóÔ∏è',
                                f'http://{link_url}.trytek.ru/oper/?core_section=task&action=show&id={currentId}')],
                    [Button.inline('–î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π', f'employee={currentId}={divId}')]
                ])
                trash_add(datetime.now(), old)
                try:
                    prevDivId = get_executors(taskId)[0]
                    chatId = all_divisions[prevDivId].tgId
                    name = employee_data(users[id].jobId, short_name=True)['short_name']
                    txt = f'–ó–∞–¥–∞—á–∞ #{taskId} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!\n–°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞ –Ω–∞ –≤—ã–µ–∑–¥ #{currentId}\n' \
                          f'–ó–∞–∫—Ä—ã–ª –∑–∞–¥–∞—á—É: {name}\n\n' \
                          f'[üîó–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ]' \
                          f'(http://{link_url}.trytek.ru/oper/?core_section=task&action=show&id={taskId})\n' \
                          f'[üîó–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–¥–∞—á—É –Ω–∞ –≤—ã–µ–∑–¥]' \
                          f'(http://{link_url}.trytek.ru/oper/?core_section=task&action=show&id={currentId})'
                    old = await bot.send_message(chatId, txt)
                    trash_add(datetime.now(), old)
                except Exception as e:
                    logging.error(str(e))
                    old = await bot.send_message(id, 'üî¥–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ–±—â–∏–π —á–∞—Ç')
                    trash_add(datetime.now(), old)
            else:
                txt = f'üî¥–í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏'
                old = await event.edit(txt)
                trash_add(datetime.now(), old)

    elif 'employee' == command[:8]:
        if command.count('=') == 2:
            taskId, divId = map(int, command.split('=')[1:])
            template = await make_employee_job_buttons(taskId, divId)
            await bot.send_message(id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤', buttons=template)
        elif command.count('=') == 3:
            taskId, divId, workers = command.split('=')[1:]
            taskId, divId = int(taskId), int(divId)
            template = await make_employee_job_buttons(taskId, divId, workers)
            await event.edit(buttons=template)
        elif command.count('=') == 4:
            taskId, divId, workers, mode = command.split('=')[1:]
            taskId, divId = int(taskId), int(divId)

            currentWorkers = {int(val) for val in workers.split(',') if val}

            tmp_count = 0
            for employeeId in currentWorkers:
                if employee_add(taskId, employeeId, users[id].jobId):
                    tmp_count += 1

            old = await event.edit(f'–î–æ–±–∞–≤–ª–µ–Ω–æ {tmp_count} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏!')
            trash_add(datetime.now(), old)

    elif 'inventory' == command[:9]:  # –∫–Ω–æ–ø–∫–∞ üì¶–û—Ç—á–µ—Ç—ã –ø–æ —Å–∫–ª–∞–¥—É
        if command.count('=') == 0:  # –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞
            template = await make_inventory_buttons()
            await event.edit(buttons=template)
        elif command.count('=') == 1:  # –≤—ã–±–æ—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å –º–µ—Ç–∫–æ–π "(—Å–ø–∏—Å–æ–∫)"
            parentId = int(command.split('=')[-1])
            template = await make_div_inventory_buttons(parentId)
            await event.edit('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ', buttons=template)
        elif command.count('=') == 2:  # –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –æ—Ç—á—ë—Ç–∞
            parentId, divId = map(int, command.split('=')[1:])
            txt = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –æ—Ç—á—ë—Ç'
            template = await make_choose_inventory_buttons(parentId, divId)
            await event.edit(txt, buttons=template)
        elif command.count('=') == 3:  # –¥–µ–π—Å—Ç–≤–∏–µ —Å –æ—Ç—á—ë—Ç–∞–º–∏
            parentId, divId, action = map(int, command.split('=')[1:])
            if action == 1:  # –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ —Å —Ç–∏–ø–æ–º "1"
                txt = '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n'\
                      '–ü—Ä–∏–º–µ—Ä: ¬´01.01.21 01.03.21¬ª'
                report_waiters[id] = divId
                old = await event.edit(txt, buttons=Button.inline('‚ùå–û—Ç–º–µ–Ω–∞', 'stop'))
                trash_add(datetime.now(), old)
            elif action == 2:  # —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ —Å —Ç–∏–ø–æ–º "2"
                await event.delete()
                make_amount_excel(divId)
                await bot.send_file(
                    id,
                    file=main_root + 'files/record2.xlsx',
                    caption=f'–§–∞–π–ª –æ—Ç {datetime.now().date()}',
                )

    elif 'confirm' == command[:7]:  # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–¥–∞—á–∏
        taskId, value = map(int, command.split('=')[1:])
        if value:
            name = employee_data(users[id].jobId, short_name=True)['short_name']
            txt = f'–ó–∞–¥–∞—á–∞ {taskId} –ø—Ä–∏–Ω—è—Ç–∞!\n–§–ò–û: {name}\n\n'\
                  f'[üîó–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ](http://us-test.trytek.ru/oper/?core_section=task&action=show&id={taskId})\n'

            old = await event.edit(txt, buttons=Button.url('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –∑–∞–¥–∞—á–µ–π‚ÜóÔ∏è',
                                                           'https://t.me/trytek_usersideXVI_bot'))
            trash_add(datetime.now(), old)

            # staff_add(taskId, users[id].jobId)
            task_change_state(taskId, 3)
            comment_add(taskId, '–í–∑—è–ª –≤ —Ä–∞–±–æ—Ç—É', users[id].jobId)
            telegramId, txt = task_make_txt(taskId)
            template = await make_division_redirect_buttons(taskId)
            await bot.send_message(id, txt, buttons=template)
        else:
            template = await make_accept_buttons(taskId)
            await event.edit(buttons=template)

    elif 'accept' == command[:6]:  # –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç—å –≤ —á–∞—Ç–∞—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π
        taskId = int(command.split('=')[-1])
        if taskId in current_tasks:
            template = await make_confirm_accept_buttons(taskId)
            await event.edit(buttons=template)
        else:
            tgId, txt = task_make_txt(taskId, last_comment=True)
            old = await event.edit(txt)
            trash_add(datetime.now(), old)

    elif 'stop' == command:
        login_updaters.discard(id)
        if id in report_waiters:
            del report_waiters[id]
        old = await event.edit('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–æ!')
        trash_add(datetime.now(), old)

    elif 'new_login' == command:  # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏–Ω–∞
        login_updaters.add(id)
        txt = '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –∏–∑ USERSIDE —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n'\
              '–ü—Ä–∏–º–µ—Ä: ¬´login password¬ª'
        old = await event.edit(txt, buttons=[
            Button.inline('‚ùå–û—Ç–º–µ–Ω–∞', 'stop')
        ])
        trash_add(datetime.now(), old)
